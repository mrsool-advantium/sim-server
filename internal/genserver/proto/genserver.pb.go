// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.3
// source: genserver.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsAliveRequest) Reset() {
	*x = IsAliveRequest{}
	mi := &file_genserver_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveRequest) ProtoMessage() {}

func (x *IsAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveRequest.ProtoReflect.Descriptor instead.
func (*IsAliveRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{0}
}

type IsAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsAliveResponse) Reset() {
	*x = IsAliveResponse{}
	mi := &file_genserver_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveResponse) ProtoMessage() {}

func (x *IsAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveResponse.ProtoReflect.Descriptor instead.
func (*IsAliveResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{1}
}

type GoOnlineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GoOnlineRequest) Reset() {
	*x = GoOnlineRequest{}
	mi := &file_genserver_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoOnlineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoOnlineRequest) ProtoMessage() {}

func (x *GoOnlineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoOnlineRequest.ProtoReflect.Descriptor instead.
func (*GoOnlineRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{2}
}

type GoOnlineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *GoOnlineResponse) Reset() {
	*x = GoOnlineResponse{}
	mi := &file_genserver_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoOnlineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoOnlineResponse) ProtoMessage() {}

func (x *GoOnlineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoOnlineResponse.ProtoReflect.Descriptor instead.
func (*GoOnlineResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{3}
}

func (x *GoOnlineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type InitConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InitConnectionRequest) Reset() {
	*x = InitConnectionRequest{}
	mi := &file_genserver_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitConnectionRequest) ProtoMessage() {}

func (x *InitConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitConnectionRequest.ProtoReflect.Descriptor instead.
func (*InitConnectionRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{4}
}

type InitConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *InitConnectionResponse) Reset() {
	*x = InitConnectionResponse{}
	mi := &file_genserver_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitConnectionResponse) ProtoMessage() {}

func (x *InitConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitConnectionResponse.ProtoReflect.Descriptor instead.
func (*InitConnectionResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{5}
}

func (x *InitConnectionResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type SetLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lat float64 `protobuf:"fixed64,1,opt,name=lat,proto3" json:"lat,omitempty"`
	Lng float64 `protobuf:"fixed64,2,opt,name=lng,proto3" json:"lng,omitempty"`
}

func (x *SetLocationRequest) Reset() {
	*x = SetLocationRequest{}
	mi := &file_genserver_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationRequest) ProtoMessage() {}

func (x *SetLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationRequest.ProtoReflect.Descriptor instead.
func (*SetLocationRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{6}
}

func (x *SetLocationRequest) GetLat() float64 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *SetLocationRequest) GetLng() float64 {
	if x != nil {
		return x.Lng
	}
	return 0
}

type SetLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *SetLocationResponse) Reset() {
	*x = SetLocationResponse{}
	mi := &file_genserver_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocationResponse) ProtoMessage() {}

func (x *SetLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocationResponse.ProtoReflect.Descriptor instead.
func (*SetLocationResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{7}
}

func (x *SetLocationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type TripEstimateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginLat      float64 `protobuf:"fixed64,1,opt,name=originLat,proto3" json:"originLat,omitempty"`
	OriginLng      float64 `protobuf:"fixed64,2,opt,name=originLng,proto3" json:"originLng,omitempty"`
	DestinationLat float64 `protobuf:"fixed64,3,opt,name=destinationLat,proto3" json:"destinationLat,omitempty"`
	DestinationLng float64 `protobuf:"fixed64,4,opt,name=destinationLng,proto3" json:"destinationLng,omitempty"`
}

func (x *TripEstimateRequest) Reset() {
	*x = TripEstimateRequest{}
	mi := &file_genserver_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripEstimateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripEstimateRequest) ProtoMessage() {}

func (x *TripEstimateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripEstimateRequest.ProtoReflect.Descriptor instead.
func (*TripEstimateRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{8}
}

func (x *TripEstimateRequest) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *TripEstimateRequest) GetOriginLng() float64 {
	if x != nil {
		return x.OriginLng
	}
	return 0
}

func (x *TripEstimateRequest) GetDestinationLat() float64 {
	if x != nil {
		return x.DestinationLat
	}
	return 0
}

func (x *TripEstimateRequest) GetDestinationLng() float64 {
	if x != nil {
		return x.DestinationLng
	}
	return 0
}

type TripEstimateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TripEstimateResponse) Reset() {
	*x = TripEstimateResponse{}
	mi := &file_genserver_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripEstimateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripEstimateResponse) ProtoMessage() {}

func (x *TripEstimateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripEstimateResponse.ProtoReflect.Descriptor instead.
func (*TripEstimateResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{9}
}

func (x *TripEstimateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ConfirmTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginLat      float64 `protobuf:"fixed64,1,opt,name=originLat,proto3" json:"originLat,omitempty"`
	OriginLng      float64 `protobuf:"fixed64,2,opt,name=originLng,proto3" json:"originLng,omitempty"`
	DestinationLat float64 `protobuf:"fixed64,3,opt,name=destinationLat,proto3" json:"destinationLat,omitempty"`
	DestinationLng float64 `protobuf:"fixed64,4,opt,name=destinationLng,proto3" json:"destinationLng,omitempty"`
}

func (x *ConfirmTripRequest) Reset() {
	*x = ConfirmTripRequest{}
	mi := &file_genserver_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTripRequest) ProtoMessage() {}

func (x *ConfirmTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTripRequest.ProtoReflect.Descriptor instead.
func (*ConfirmTripRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmTripRequest) GetOriginLat() float64 {
	if x != nil {
		return x.OriginLat
	}
	return 0
}

func (x *ConfirmTripRequest) GetOriginLng() float64 {
	if x != nil {
		return x.OriginLng
	}
	return 0
}

func (x *ConfirmTripRequest) GetDestinationLat() float64 {
	if x != nil {
		return x.DestinationLat
	}
	return 0
}

func (x *ConfirmTripRequest) GetDestinationLng() float64 {
	if x != nil {
		return x.DestinationLng
	}
	return 0
}

type ConfirmTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ConfirmTripResponse) Reset() {
	*x = ConfirmTripResponse{}
	mi := &file_genserver_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmTripResponse) ProtoMessage() {}

func (x *ConfirmTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmTripResponse.ProtoReflect.Descriptor instead.
func (*ConfirmTripResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{11}
}

func (x *ConfirmTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverAcceptTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *DriverAcceptTripRequest) Reset() {
	*x = DriverAcceptTripRequest{}
	mi := &file_genserver_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAcceptTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAcceptTripRequest) ProtoMessage() {}

func (x *DriverAcceptTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAcceptTripRequest.ProtoReflect.Descriptor instead.
func (*DriverAcceptTripRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{12}
}

func (x *DriverAcceptTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type DriverAcceptTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverAcceptTripResponse) Reset() {
	*x = DriverAcceptTripResponse{}
	mi := &file_genserver_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverAcceptTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverAcceptTripResponse) ProtoMessage() {}

func (x *DriverAcceptTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverAcceptTripResponse.ProtoReflect.Descriptor instead.
func (*DriverAcceptTripResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{13}
}

func (x *DriverAcceptTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverRejectTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *DriverRejectTripRequest) Reset() {
	*x = DriverRejectTripRequest{}
	mi := &file_genserver_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRejectTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRejectTripRequest) ProtoMessage() {}

func (x *DriverRejectTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRejectTripRequest.ProtoReflect.Descriptor instead.
func (*DriverRejectTripRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{14}
}

func (x *DriverRejectTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type DriverRejectTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverRejectTripResponse) Reset() {
	*x = DriverRejectTripResponse{}
	mi := &file_genserver_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverRejectTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRejectTripResponse) ProtoMessage() {}

func (x *DriverRejectTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRejectTripResponse.ProtoReflect.Descriptor instead.
func (*DriverRejectTripResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{15}
}

func (x *DriverRejectTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverArrivalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *DriverArrivalRequest) Reset() {
	*x = DriverArrivalRequest{}
	mi := &file_genserver_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverArrivalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverArrivalRequest) ProtoMessage() {}

func (x *DriverArrivalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverArrivalRequest.ProtoReflect.Descriptor instead.
func (*DriverArrivalRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{16}
}

func (x *DriverArrivalRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type DriverArrivalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverArrivalResponse) Reset() {
	*x = DriverArrivalResponse{}
	mi := &file_genserver_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverArrivalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverArrivalResponse) ProtoMessage() {}

func (x *DriverArrivalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverArrivalResponse.ProtoReflect.Descriptor instead.
func (*DriverArrivalResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{17}
}

func (x *DriverArrivalResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverStartTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *DriverStartTripRequest) Reset() {
	*x = DriverStartTripRequest{}
	mi := &file_genserver_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverStartTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverStartTripRequest) ProtoMessage() {}

func (x *DriverStartTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverStartTripRequest.ProtoReflect.Descriptor instead.
func (*DriverStartTripRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{18}
}

func (x *DriverStartTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type DriverStartTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverStartTripResponse) Reset() {
	*x = DriverStartTripResponse{}
	mi := &file_genserver_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverStartTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverStartTripResponse) ProtoMessage() {}

func (x *DriverStartTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverStartTripResponse.ProtoReflect.Descriptor instead.
func (*DriverStartTripResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{19}
}

func (x *DriverStartTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type DriverCompleteTripRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
}

func (x *DriverCompleteTripRequest) Reset() {
	*x = DriverCompleteTripRequest{}
	mi := &file_genserver_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverCompleteTripRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCompleteTripRequest) ProtoMessage() {}

func (x *DriverCompleteTripRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCompleteTripRequest.ProtoReflect.Descriptor instead.
func (*DriverCompleteTripRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{20}
}

func (x *DriverCompleteTripRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

type DriverCompleteTripResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DriverCompleteTripResponse) Reset() {
	*x = DriverCompleteTripResponse{}
	mi := &file_genserver_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DriverCompleteTripResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCompleteTripResponse) ProtoMessage() {}

func (x *DriverCompleteTripResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCompleteTripResponse.ProtoReflect.Descriptor instead.
func (*DriverCompleteTripResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{21}
}

func (x *DriverCompleteTripResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RatingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TripId string  `protobuf:"bytes,1,opt,name=tripId,proto3" json:"tripId,omitempty"`
	Rating float32 `protobuf:"fixed32,2,opt,name=rating,proto3" json:"rating,omitempty"`
}

func (x *RatingRequest) Reset() {
	*x = RatingRequest{}
	mi := &file_genserver_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingRequest) ProtoMessage() {}

func (x *RatingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingRequest.ProtoReflect.Descriptor instead.
func (*RatingRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{22}
}

func (x *RatingRequest) GetTripId() string {
	if x != nil {
		return x.TripId
	}
	return ""
}

func (x *RatingRequest) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

type RatingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RatingResponse) Reset() {
	*x = RatingResponse{}
	mi := &file_genserver_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RatingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RatingResponse) ProtoMessage() {}

func (x *RatingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RatingResponse.ProtoReflect.Descriptor instead.
func (*RatingResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{23}
}

func (x *RatingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type HandleCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HandleCallRequest) Reset() {
	*x = HandleCallRequest{}
	mi := &file_genserver_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCallRequest) ProtoMessage() {}

func (x *HandleCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCallRequest.ProtoReflect.Descriptor instead.
func (*HandleCallRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{24}
}

func (x *HandleCallRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *HandleCallRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type HandleCallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HandleCallResponse) Reset() {
	*x = HandleCallResponse{}
	mi := &file_genserver_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCallResponse) ProtoMessage() {}

func (x *HandleCallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCallResponse.ProtoReflect.Descriptor instead.
func (*HandleCallResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{25}
}

func (x *HandleCallResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type HandleCastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *HandleCastRequest) Reset() {
	*x = HandleCastRequest{}
	mi := &file_genserver_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCastRequest) ProtoMessage() {}

func (x *HandleCastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCastRequest.ProtoReflect.Descriptor instead.
func (*HandleCastRequest) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{26}
}

func (x *HandleCastRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *HandleCastRequest) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type HandleCastResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HandleCastResponse) Reset() {
	*x = HandleCastResponse{}
	mi := &file_genserver_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleCastResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleCastResponse) ProtoMessage() {}

func (x *HandleCastResponse) ProtoReflect() protoreflect.Message {
	mi := &file_genserver_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleCastResponse.ProtoReflect.Descriptor instead.
func (*HandleCastResponse) Descriptor() ([]byte, []int) {
	return file_genserver_proto_rawDescGZIP(), []int{27}
}

var File_genserver_proto protoreflect.FileDescriptor

var file_genserver_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x22, 0x10, 0x0a, 0x0e,
	0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x6f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x2c, 0x0a, 0x10, 0x47, 0x6f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x16, 0x49,
	0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x38, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x54,
	0x72, 0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x61, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c, 0x6e, 0x67, 0x12, 0x26,
	0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e,
	0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e, 0x67, 0x22, 0x30,
	0x0a, 0x14, 0x54, 0x72, 0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x4c, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x4c, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4c,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x4c, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6e, 0x67, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72,
	0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a,
	0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x69,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x17, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x33, 0x0a, 0x19, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x72, 0x69, 0x70, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x1a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3f, 0x0a,
	0x0d, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x72, 0x69, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x2a,
	0x0a, 0x0e, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x41, 0x0a, 0x11, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a,
	0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x48,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x14,
	0x0a, 0x12, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0xbd, 0x02, 0x0a, 0x0f, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x6f, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x47, 0x6f, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x6f, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a,
	0x0e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x19, 0x2e,
	0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x99, 0x03, 0x0a, 0x11, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x55, 0x0a, 0x0e, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x67,
	0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x19, 0x2e, 0x67, 0x65, 0x6e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x54, 0x72, 0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x12, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x69, 0x70, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x69,
	0x70, 0x12, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x54, 0x72, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xa1, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x49,
	0x0a, 0x0a, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x1c, 0x2e, 0x67,
	0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x48, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_genserver_proto_rawDescOnce sync.Once
	file_genserver_proto_rawDescData = file_genserver_proto_rawDesc
)

func file_genserver_proto_rawDescGZIP() []byte {
	file_genserver_proto_rawDescOnce.Do(func() {
		file_genserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_genserver_proto_rawDescData)
	})
	return file_genserver_proto_rawDescData
}

var file_genserver_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_genserver_proto_goTypes = []any{
	(*IsAliveRequest)(nil),             // 0: genserver.IsAliveRequest
	(*IsAliveResponse)(nil),            // 1: genserver.IsAliveResponse
	(*GoOnlineRequest)(nil),            // 2: genserver.GoOnlineRequest
	(*GoOnlineResponse)(nil),           // 3: genserver.GoOnlineResponse
	(*InitConnectionRequest)(nil),      // 4: genserver.InitConnectionRequest
	(*InitConnectionResponse)(nil),     // 5: genserver.InitConnectionResponse
	(*SetLocationRequest)(nil),         // 6: genserver.SetLocationRequest
	(*SetLocationResponse)(nil),        // 7: genserver.SetLocationResponse
	(*TripEstimateRequest)(nil),        // 8: genserver.TripEstimateRequest
	(*TripEstimateResponse)(nil),       // 9: genserver.TripEstimateResponse
	(*ConfirmTripRequest)(nil),         // 10: genserver.ConfirmTripRequest
	(*ConfirmTripResponse)(nil),        // 11: genserver.ConfirmTripResponse
	(*DriverAcceptTripRequest)(nil),    // 12: genserver.DriverAcceptTripRequest
	(*DriverAcceptTripResponse)(nil),   // 13: genserver.DriverAcceptTripResponse
	(*DriverRejectTripRequest)(nil),    // 14: genserver.DriverRejectTripRequest
	(*DriverRejectTripResponse)(nil),   // 15: genserver.DriverRejectTripResponse
	(*DriverArrivalRequest)(nil),       // 16: genserver.DriverArrivalRequest
	(*DriverArrivalResponse)(nil),      // 17: genserver.DriverArrivalResponse
	(*DriverStartTripRequest)(nil),     // 18: genserver.DriverStartTripRequest
	(*DriverStartTripResponse)(nil),    // 19: genserver.DriverStartTripResponse
	(*DriverCompleteTripRequest)(nil),  // 20: genserver.DriverCompleteTripRequest
	(*DriverCompleteTripResponse)(nil), // 21: genserver.DriverCompleteTripResponse
	(*RatingRequest)(nil),              // 22: genserver.RatingRequest
	(*RatingResponse)(nil),             // 23: genserver.RatingResponse
	(*HandleCallRequest)(nil),          // 24: genserver.HandleCallRequest
	(*HandleCallResponse)(nil),         // 25: genserver.HandleCallResponse
	(*HandleCastRequest)(nil),          // 26: genserver.HandleCastRequest
	(*HandleCastResponse)(nil),         // 27: genserver.HandleCastResponse
}
var file_genserver_proto_depIdxs = []int32{
	2,  // 0: genserver.SimulatedDriver.GoOnline:input_type -> genserver.GoOnlineRequest
	4,  // 1: genserver.SimulatedDriver.InitConnection:input_type -> genserver.InitConnectionRequest
	6,  // 2: genserver.SimulatedDriver.SetLocation:input_type -> genserver.SetLocationRequest
	0,  // 3: genserver.SimulatedDriver.IsAlive:input_type -> genserver.IsAliveRequest
	4,  // 4: genserver.SimulatedCustomer.InitConnection:input_type -> genserver.InitConnectionRequest
	6,  // 5: genserver.SimulatedCustomer.SetLocation:input_type -> genserver.SetLocationRequest
	0,  // 6: genserver.SimulatedCustomer.IsAlive:input_type -> genserver.IsAliveRequest
	8,  // 7: genserver.SimulatedCustomer.TripEstimate:input_type -> genserver.TripEstimateRequest
	10, // 8: genserver.SimulatedCustomer.ConfirmTrip:input_type -> genserver.ConfirmTripRequest
	24, // 9: genserver.GenServer.HandleCall:input_type -> genserver.HandleCallRequest
	26, // 10: genserver.GenServer.HandleCast:input_type -> genserver.HandleCastRequest
	3,  // 11: genserver.SimulatedDriver.GoOnline:output_type -> genserver.GoOnlineResponse
	5,  // 12: genserver.SimulatedDriver.InitConnection:output_type -> genserver.InitConnectionResponse
	7,  // 13: genserver.SimulatedDriver.SetLocation:output_type -> genserver.SetLocationResponse
	1,  // 14: genserver.SimulatedDriver.IsAlive:output_type -> genserver.IsAliveResponse
	5,  // 15: genserver.SimulatedCustomer.InitConnection:output_type -> genserver.InitConnectionResponse
	7,  // 16: genserver.SimulatedCustomer.SetLocation:output_type -> genserver.SetLocationResponse
	1,  // 17: genserver.SimulatedCustomer.IsAlive:output_type -> genserver.IsAliveResponse
	9,  // 18: genserver.SimulatedCustomer.TripEstimate:output_type -> genserver.TripEstimateResponse
	11, // 19: genserver.SimulatedCustomer.ConfirmTrip:output_type -> genserver.ConfirmTripResponse
	25, // 20: genserver.GenServer.HandleCall:output_type -> genserver.HandleCallResponse
	27, // 21: genserver.GenServer.HandleCast:output_type -> genserver.HandleCastResponse
	11, // [11:22] is the sub-list for method output_type
	0,  // [0:11] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_genserver_proto_init() }
func file_genserver_proto_init() {
	if File_genserver_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_genserver_proto_goTypes,
		DependencyIndexes: file_genserver_proto_depIdxs,
		MessageInfos:      file_genserver_proto_msgTypes,
	}.Build()
	File_genserver_proto = out.File
	file_genserver_proto_rawDesc = nil
	file_genserver_proto_goTypes = nil
	file_genserver_proto_depIdxs = nil
}
